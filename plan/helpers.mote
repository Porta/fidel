module Helpers

  def current_user
    authenticated(User)
  end

  def base_domain
    req.host_with_port
  end

  def base_url
    "http://#{req.host_with_port}"
  end

  def notfound(msg)
    res.status = 404
    res.write view("404", title: msg, breadcrumb: msg)
    halt(res.finish)
  end

  def forbidden(msg)
    res.status = 403
    res.write(msg)
    halt(res.finish)
  end

  def respond(params)
    #TODO: Evaluate if I need to find a way to merge headers
    #params[:headers_hash].each{|k, v| res[k] = v}
    res.status = params[:status]
    res.write params[:body]
    halt(res.finish)
  end

  def flash(msg = "", kind = "")
    @message ||= ""
    @kind ||= ""
    @return = ""
    if !(msg.empty?)
      session[:flash] = @message << msg
      session[:flash_kind] = @kind << kind.to_s
    else
      @return = session[:flash]
      session[:flash] = nil
      session[:flash_kind] = nil
      @return
    end
  end

  def flash_kind
    session[:flash_kind]
  end

  def is_ajax?
    if (req.env['HTTP_X_REQUESTED_WITH'] && req.env['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest')
      true
    else
      false
    end
  end
    
  def jsonify(message)
    #JSON.pretty_generate(message).gsub("\n\n", "").gsub("\n", "<br />").gsub("\s\s", "&nbsp;&nbsp;").gsub('\"', "'")
    JSON.pretty_generate(message)
  end

end